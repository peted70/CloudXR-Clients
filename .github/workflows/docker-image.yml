name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Fetch Release Metadata
      id: fetch_release
      run: |
        # Fetch the release metadata
        release_info=$(curl -H "Authorization: token ${{ secrets.PAT }}" -H "Accept: application/vnd.github+json" https://api.github.com/repos/peted70/CloudXR-Clients/releases/latest)
        echo "$release_info" > release_info.json

        # Print the release info for debugging
        cat release_info.json

        # Extract the asset URL
        asset_url=$(echo "$release_info" | jq -r '.assets[] | select(.name == "CloudXR-SDK_4_0_0.zip") | .browser_download_url')

        if [ -z "$asset_url" ]; then
          echo "Error: Asset URL could not be found or is null."
          exit 1
        fi

        echo "Asset URL: $asset_url"
        echo "ASSET_URL=$asset_url" >> $GITHUB_ENV

    - name: Download Release Asset
      run: |
        # Download the asset using the extracted URL
        curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.PAT }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -o CloudXR-SDK_4_0_0.zip \
          $ASSET_URL       
          
    # Check if the download was successful and verify the file size
    - name: Verify download
      run: |
        if [ ! -f "CloudXR-SDK_4_0_0.zip" ]; then 
          echo "Download failed"; 
          exit 1; 
        fi
        
        FILE_SIZE=$(stat -c%s "CloudXR-SDK_4_0_0.zip")
        
        if [ "$FILE_SIZE" -le 100 ]; then 
          echo "Downloaded file is too small. Contents of the file:";
          cat CloudXR-SDK_4_0_0.zip;
          exit 1; 
        fi
        
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
