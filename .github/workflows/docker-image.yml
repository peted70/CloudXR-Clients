name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4            
    - name: Build the Docker image
      run: docker build --build-arg GITHUB_TOKEN=${{ secrets.PAT }} . --file Dockerfile --tag cloudxr-dev-env:latest
    # Run the command inside the Docker container to create the APK
    - name: Build APK
      run: docker run --name my-container -w /CloudXR-SDK_4_0_0/Client/Sample/Android/OculusVR cloudxr-dev-env:latest bash -c "./gradlew build"
    # Copy the APK file from the container to the host machine
    - name: Copy APK to host
      run: docker cp my-container:/CloudXR-SDK_4_0_0/Client/Sample/Android/OculusVR/app/build/outputs/apk/debug/app-debug.apk .
    - name: Copy Release APK to Host
      run: docker cp my-container:/CloudXR-SDK_4_0_0/Client/Sample/Android/OculusVR/app/build/outputs/apk/release/app-release.apk .

    # Upload the APK as an artifact
    - name: Upload APK as Artifact
      uses: actions/upload-artifact@v4
      with:
          name: app-debug-apk
          path: app-debug.apk
    - name: Upload Release APK as Artifact
      uses: actions/upload-artifact@v4
      with:
          name: app-release-apk
          path: app-release.apk
    
    # Cleanup the container
    - name: Cleanup
      run: docker rm my-container


